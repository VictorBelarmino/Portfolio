[{"C:\\Projetos GIT\\Portfolio\\src\\index.js":"1","C:\\Projetos GIT\\Portfolio\\src\\reportWebVitals.js":"2","C:\\Projetos GIT\\Portfolio\\src\\App.js":"3","C:\\Projetos GIT\\Portfolio\\src\\components\\Projects.js":"4","C:\\Projetos GIT\\Portfolio\\src\\components\\Processes.js":"5","C:\\Projetos GIT\\Portfolio\\src\\components\\NavBar.js":"6","C:\\Projetos GIT\\Portfolio\\src\\components\\Banner.js":"7","C:\\Projetos GIT\\Portfolio\\src\\components\\Skills.js":"8","C:\\Projetos GIT\\Portfolio\\src\\components\\Footer.js":"9","C:\\Projetos GIT\\Portfolio\\src\\components\\Contact.js":"10","C:\\Projetos GIT\\Portfolio\\src\\components\\ProjectCard.js":"11","C:\\Projetos GIT\\Portfolio\\src\\components\\MailchimpForm.js":"12","C:\\Projetos GIT\\Portfolio\\src\\components\\Newsletter.js":"13"},{"size":552,"mtime":1724241679946,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1724241679947,"results":"16","hashOfConfig":"15"},{"size":672,"mtime":1724241679212,"results":"17","hashOfConfig":"15"},{"size":12017,"mtime":1728516282113,"results":"18","hashOfConfig":"15"},{"size":10491,"mtime":1728516289523,"results":"19","hashOfConfig":"15"},{"size":3166,"mtime":1724241679941,"results":"20","hashOfConfig":"15"},{"size":3024,"mtime":1728516282110,"results":"21","hashOfConfig":"15"},{"size":5675,"mtime":1728516282114,"results":"22","hashOfConfig":"15"},{"size":1559,"mtime":1724241679940,"results":"23","hashOfConfig":"15"},{"size":4981,"mtime":1724241679939,"results":"24","hashOfConfig":"15"},{"size":629,"mtime":1728516282112,"results":"25","hashOfConfig":"15"},{"size":612,"mtime":1724241679940,"results":"26","hashOfConfig":"15"},{"size":1433,"mtime":1724241679941,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1w226kg",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"48","usedDeprecatedRules":"31"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"58","usedDeprecatedRules":"31"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"31"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"C:\\Projetos GIT\\Portfolio\\src\\index.js",[],[],[],"C:\\Projetos GIT\\Portfolio\\src\\reportWebVitals.js",[],[],"C:\\Projetos GIT\\Portfolio\\src\\App.js",["72"],[],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport { NavBar } from './components/NavBar';\r\nimport { Banner } from './components/Banner';\r\nimport { Skills } from './components/Skills';\r\nimport { Projects } from './components/Projects';\r\nimport { Processes } from './components/Processes';\r\nimport { Footer } from './components/Footer';\r\nimport { Contact } from './components/Contact';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <NavBar/>\r\n      <Banner/>\r\n      <Skills/>\r\n      <Projects/>\r\n      <Processes/>\r\n      <Contact/>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Projetos GIT\\Portfolio\\src\\components\\Projects.js",["73"],[],"C:\\Projetos GIT\\Portfolio\\src\\components\\Processes.js",[],[],"C:\\Projetos GIT\\Portfolio\\src\\components\\NavBar.js",["74","75","76","77"],[],"import { useState, useEffect } from \"react\";\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\nimport logo from '../assets/img/logo.png';\r\nimport navIcon1 from '../assets/img/nav-icon1.svg';\r\nimport navIcon2 from '../assets/img/nav-icon.png';\r\nimport navIcon3 from '../assets/img/nav-icon3.svg';\r\n\r\nexport const NavBar = () => {\r\nconst [activeLink, setActiveLink] = useState('home');\r\nconst [scrolled, setScrolled] = useState(false);\r\n\r\nuseEffect(() => {\r\n    const onScroll = () => {\r\n      if (window.scrollY > 50) {\r\n        setScrolled(true);\r\n      } else {\r\n        setScrolled(false);\r\n      }\r\n    }\r\n\r\n    window.addEventListener(\"scroll\", onscroll);\r\n\r\n    return() => window.addEventListener(\"scroll\", onscroll);\r\n}, [])\r\n\r\n    const onUpdateActiveLink = (value) => {\r\n        setActiveLink(value);\r\n    }\r\n\r\n    return(\r\n        <Navbar expand=\"lg\">{scrolled ? \"scrolled\": \"\"}\r\n            <Container>\r\n\r\n                <Navbar.Brand href=\"#home\">\r\n                    <img src={logo} alt=\"Logo\" />\r\n                </Navbar.Brand>\r\n\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"> \r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </Navbar.Toggle>\r\n\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                        <Nav.Link href=\"#home\" className = {activeLink === 'home' ? 'active navbar-link' : 'navbar-link'} onClick={() => onUpdateActiveLink('home')} >Home</Nav.Link>\r\n                        <Nav.Link href=\"#skills\" className = {activeLink === 'skills' ? 'active navbar-link' : 'navbar-link'} onClick={() => onUpdateActiveLink('skills')}>Skills</Nav.Link>\r\n                        <Nav.Link href=\"#projects\" className = {activeLink === 'projects' ? 'active navbar-link' : 'navbar-link'} onClick={() => onUpdateActiveLink('projects')}>Projects</Nav.Link>\r\n                        <Nav.Link href=\"#processes\" className = {activeLink === 'process' ? 'active navbar-link' : 'navbar-link'} onClick={() => onUpdateActiveLink('processes')}>Processes</Nav.Link>\r\n                    </Nav>\r\n                    <span className=\"navbar-text\">\r\n                        <div className=\"social-icon\">\r\n                            <a href='https://www.linkedin.com/in/victor-oliveira-belarmino-92138a197/'  target=\"_blank\"><img src={navIcon1} alt=\"\"/> </a>\r\n                            <a href='https://victorbelarmino.itch.io' target=\"_blank\" ><img src={navIcon2} alt=\"\"/> </a>\r\n                            {/*<a href='#'><img src={navIcon3} alt=\"\"/> </a>*/}\r\n                        </div>\r\n                        <button className=\"vvd\" onClick={() => console.log('connect')}><span></span>\r\n                        <Nav className=\"me-auto\">\r\n                        <Nav.Link href=\"#connect\" className = {activeLink === 'contact' ? 'active navbar-link' : 'navbar-link'} onClick={() => onUpdateActiveLink('contact')}>Let's Connect</Nav.Link>\r\n                        </Nav>\r\n                        </button>\r\n                    </span>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}","C:\\Projetos GIT\\Portfolio\\src\\components\\Banner.js",["78","79","80"],[],"C:\\Projetos GIT\\Portfolio\\src\\components\\Skills.js",["81","82","83","84","85","86","87","88","89","90","91","92"],[],"C:\\Projetos GIT\\Portfolio\\src\\components\\Footer.js",["93","94","95","96","97"],[],"import { Container, Row, Col } from \"react-bootstrap\";\r\nimport {MailchimpForm} from \"./MailchimpForm.js\";\r\nimport logo from \"../assets/img/logo.png\";\r\nimport navIcon1 from '../assets/img/nav-icon1.svg';\r\nimport navIcon2 from '../assets/img/nav-icon.png';\r\nimport navIcon3 from '../assets/img/nav-icon3.svg';\r\nimport emailLogo from '../assets/img/email-logo.png';\r\n\r\n\r\nexport const Footer = () =>{\r\n    return (\r\n        <footer className=\"footer\">\r\n            <Container>\r\n                <Row className=\"align-item-center\">\r\n                    <Col sm={6}>\r\n                        <img src={logo} alt=\"Logo\" />\r\n                        \r\n                        <br></br>\r\n                        <Row>\r\n                        <p>victorbelarminocontato@gmail.com</p>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col sm={6} className=\"text-center text-sm-end\">\r\n                        <div className=\"social-icon\">\r\n                            <a href='https://www.linkedin.com/in/victor-oliveira-belarmino-92138a197/'  target=\"_blank\"><img src={navIcon1} alt=\"\"/> </a>\r\n                            <a href='https://victorbelarmino.itch.io' target=\"_blank\" ><img src={navIcon2} alt=\"\"/> </a>\r\n                            {/*<a href='#'><img src={navIcon3} alt=\"Icon\"/> </a>*/}\r\n                        </div>\r\n                        <br></br>\r\n                        <p>CopyRight 2023. All Right Reserved</p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}","C:\\Projetos GIT\\Portfolio\\src\\components\\Contact.js",["98","99","100"],[],"import { useState } from \"react\"\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport contactImg from \"../assets/img/contact-img.svg\";\r\n\r\nexport const Contact = () => {\r\n    const formInitialDetail = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        phone: '',\r\n        message: ''\r\n    }\r\n\r\n    const [formDetails, setFormDetails] = useState(formInitialDetail);\r\n    const [buttonText, setButtonText] = useState('Send');\r\n    const [status, setStatus] = useState({});\r\n    \r\n    const onFormUpdate = (category, value) => {\r\n        setFormDetails({\r\n            ...formDetails,\r\n            [category]: value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault();\r\n        setButtonText('Sending...');\r\n        let response = await fetch(\"http://localhost:3000\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"Application/json;charset=utf-8\",\r\n        },\r\n        body: JSON.stringify(formDetails)\r\n        });\r\n        setButtonText(\"Send\");\r\n        let result = response.json();\r\n        setFormDetails(formInitialDetail);\r\n        if(result.code === 200){\r\n            setStatus({success: true, message: 'Message send successfully'})\r\n        } else{\r\n            setStatus({success: false, message: 'Something went wrongm, please try again later'})\r\n        }\r\n    };\r\n\r\n    return(\r\n        \r\n        <section className=\"contact\" id=\"connect\">\r\n            <Container>\r\n                <Row className=\"align-items-center\">\r\n                    <Col md={6}>\r\n                        <img src={contactImg} alt=\"Contact Us\"/>\r\n                    </Col>\r\n\r\n                    <Col md={6}>\r\n                        <h2>Get In Touch</h2>\r\n                        <form action=\"https://getform.io/f/1381128c-8eff-4a8e-8401-97a07af83ecf\" method=\"POST\">\r\n                        <Col>\r\n                            <label>\r\n                                Name\r\n                                <input type='text' name='name'/>\r\n                            </label>\r\n\r\n                            <label>\r\n                                Email\r\n                                <input type='email' name='email'/>\r\n                            </label>\r\n\r\n                            <Row>\r\n                                <label>\r\n                                    Subject\r\n                                    <input type='text' name='subject' />\r\n                                    </label>\r\n                                <label>\r\n                                    Message\r\n                                    <textarea name='message' rows='5' />\r\n                                </label>\r\n                            </Row>\r\n                           \r\n                            </Col>\r\n                            <button type=\"submit\"><span>{buttonText}</span></button>\r\n                        </form>\r\n                        {/* <form onSubmit={handleSubmit}>\r\n                            <Row>\r\n                                <Col sm={6} className=\"px-1\">\r\n                                    <input type=\"text\" value={formDetails.firstName} placeholder=\"First Name\" onChange={(e) => onFormUpdate('firstName', e.target.value)} />\r\n                                </Col>\r\n\r\n                                <Col sm={6} className=\"px-1\">\r\n                                    <input type=\"text\" value={formDetails.lastName} placeholder=\"Last Name\" onChange={(e) => onFormUpdate('lastName', e.target.value)} />\r\n                                </Col>\r\n\r\n                                <Col sm={6} className=\"px-1\">\r\n                                    <input type=\"email\" value={formDetails.email} placeholder=\"Email Address\" onChange={(e) => onFormUpdate('email', e.target.value)} />\r\n                                </Col>\r\n\r\n                                <Col sm={6} className=\"px-1\">\r\n                                    <input type=\"tel\" value={formDetails.phone} placeholder=\"Phone No.\" onChange={(e) => onFormUpdate('phone', e.target.value)} />\r\n                                </Col>\r\n\r\n                                <Col>\r\n                                    <textarea rows=\"6\" value={formDetails.message} placeholder=\"Message\" onChange={(e) => onFormUpdate('message', e.target.value)}></textarea>\r\n                                    <button type=\"submit\"><span>{buttonText}</span></button>\r\n                                </Col>\r\n                                {\r\n                                    status.message &&\r\n                                    <Col>\r\n                                        <p className={status.success === false ? \"danger\" : \"success\"}>{status.message}</p>\r\n                                    </Col>\r\n                                }\r\n                            </Row>\r\n                        </form> */}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </section>    \r\n    )\r\n}","C:\\Projetos GIT\\Portfolio\\src\\components\\ProjectCard.js",["101"],[],"C:\\Projetos GIT\\Portfolio\\src\\components\\MailchimpForm.js",[],[],"C:\\Projetos GIT\\Portfolio\\src\\components\\Newsletter.js",[],[],{"ruleId":"102","severity":1,"message":"103","line":1,"column":8,"nodeType":"104","messageId":"105","endLine":1,"endColumn":12},{"ruleId":"106","severity":1,"message":"107","line":251,"column":7,"nodeType":"108","endLine":251,"endColumn":65},{"ruleId":"102","severity":1,"message":"109","line":6,"column":8,"nodeType":"104","messageId":"105","endLine":6,"endColumn":16},{"ruleId":"102","severity":1,"message":"110","line":13,"column":11,"nodeType":"104","messageId":"105","endLine":13,"endColumn":19},{"ruleId":"111","severity":1,"message":"112","line":51,"column":29,"nodeType":"108","messageId":"113","endLine":51,"endColumn":121,"fix":"114"},{"ruleId":"111","severity":1,"message":"112","line":52,"column":29,"nodeType":"108","messageId":"113","endLine":52,"endColumn":88,"fix":"115"},{"ruleId":"102","severity":1,"message":"116","line":3,"column":10,"nodeType":"104","messageId":"105","endLine":3,"endColumn":26},{"ruleId":"102","severity":1,"message":"117","line":16,"column":12,"nodeType":"104","messageId":"105","endLine":16,"endColumn":17},{"ruleId":"118","severity":1,"message":"119","line":26,"column":8,"nodeType":"120","endLine":26,"endColumn":14,"suggestions":"121"},{"ruleId":"102","severity":1,"message":"122","line":4,"column":8,"nodeType":"104","messageId":"105","endLine":4,"endColumn":14},{"ruleId":"102","severity":1,"message":"123","line":5,"column":8,"nodeType":"104","messageId":"105","endLine":5,"endColumn":14},{"ruleId":"102","severity":1,"message":"124","line":6,"column":8,"nodeType":"104","messageId":"105","endLine":6,"endColumn":14},{"ruleId":"102","severity":1,"message":"125","line":11,"column":8,"nodeType":"104","messageId":"105","endLine":11,"endColumn":13},{"ruleId":"102","severity":1,"message":"126","line":17,"column":11,"nodeType":"104","messageId":"105","endLine":17,"endColumn":21},{"ruleId":"106","severity":1,"message":"107","line":90,"column":13,"nodeType":"108","endLine":90,"endColumn":70},{"ruleId":"127","severity":1,"message":"128","line":97,"column":37,"nodeType":"108","endLine":97,"endColumn":72},{"ruleId":"127","severity":1,"message":"128","line":103,"column":37,"nodeType":"108","endLine":103,"endColumn":67},{"ruleId":"127","severity":1,"message":"128","line":109,"column":37,"nodeType":"108","endLine":109,"endColumn":72},{"ruleId":"127","severity":1,"message":"128","line":114,"column":37,"nodeType":"108","endLine":114,"endColumn":67},{"ruleId":"127","severity":1,"message":"128","line":120,"column":37,"nodeType":"108","endLine":120,"endColumn":68},{"ruleId":"106","severity":1,"message":"107","line":129,"column":13,"nodeType":"108","endLine":129,"endColumn":70},{"ruleId":"102","severity":1,"message":"129","line":2,"column":9,"nodeType":"104","messageId":"105","endLine":2,"endColumn":22},{"ruleId":"102","severity":1,"message":"109","line":6,"column":8,"nodeType":"104","messageId":"105","endLine":6,"endColumn":16},{"ruleId":"102","severity":1,"message":"130","line":7,"column":8,"nodeType":"104","messageId":"105","endLine":7,"endColumn":17},{"ruleId":"111","severity":1,"message":"112","line":25,"column":29,"nodeType":"108","messageId":"113","endLine":25,"endColumn":121,"fix":"131"},{"ruleId":"111","severity":1,"message":"112","line":26,"column":29,"nodeType":"108","messageId":"113","endLine":26,"endColumn":88,"fix":"132"},{"ruleId":"102","severity":1,"message":"133","line":16,"column":12,"nodeType":"104","messageId":"105","endLine":16,"endColumn":18},{"ruleId":"102","severity":1,"message":"134","line":18,"column":11,"nodeType":"104","messageId":"105","endLine":18,"endColumn":23},{"ruleId":"102","severity":1,"message":"135","line":25,"column":11,"nodeType":"104","messageId":"105","endLine":25,"endColumn":23},{"ruleId":"106","severity":1,"message":"107","line":6,"column":13,"nodeType":"108","endLine":6,"endColumn":32},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'navIcon3' is defined but never used.","'onScroll' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"136","text":"137"},{"range":"138","text":"137"},"'ArrowRightCircle' is defined but never used.","'index' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'delta' and 'tick'. Either include them or remove the dependency array.","ArrayExpression",["139"],"'meter1' is defined but never used.","'meter2' is defined but never used.","'meter3' is defined but never used.","'logo4' is defined but never used.","'responsive' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'MailchimpForm' is defined but never used.","'emailLogo' is defined but never used.",{"range":"140","text":"137"},{"range":"141","text":"137"},"'status' is assigned a value but never used.","'onFormUpdate' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.",[2357,2357]," rel=\"noreferrer\"",[2478,2478],{"desc":"142","fix":"143"},[1077,1077],[1198,1198],"Update the dependencies array to be: [delta, text, tick]",{"range":"144","text":"145"},[806,812],"[delta, text, tick]"]